#include "%ClassName%Proxy.hpp"

#include <%ClassName%.hpp>

namespace %Namespace% {
/***********************************************/
/***** static variables initialize *************/
/***********************************************/


/***********************************************/
/***** static function implement ***************/
/***********************************************/
int %ClassName%::registerNativeMethods(JNIEnv* jenv)
{
  const JNINativeMethod methodArray[] = {
%JniNativeMethods%
  };

  jclass jclazz = jenv->FindClass("%JniJavaClass%");
  if(jclazz == nullptr) {
    return -1;
  }

  int ret = jenv->RegisterNatives(jclazz, methodArray, sizeof(methodArray)/sizeof(*methodArray));
  if(ret < 0) {
    return ret;
  }

  return 0;
}

%PlatformFunction%

%NativeFunction%

/***********************************************/
/***** class public function implement  ********/
/***********************************************/

/***********************************************/
/***** class protected function implement  *****/
/***********************************************/


/***********************************************/
/***** class private function implement  *******/
/***********************************************/


} // namespace %Namespace%
